#!/nfs/engweb/bin/perl -T

#==============================================================================
# Initialize basic variables
#------------------------------------------------------------------------------
# Currently the name of the group to which this script belongs and hence whose
# members are authorized to make use it is hardcoded since it is not possible
# to find it by stat-ing $0 due to the fact that $0 itself gets changed for
# set-uid scripts. Will change this when I think up a workaround.
# @group = split(" ", (getgrgid((stat($0))[5]))[3]);
# ($cmd = $0) =~ s:.*/::;
#------------------------------------------------------------------------------
$cmd   = "ncvs";
@user  = getpwuid($<);
@group = split(" ", (getgrgid(21022))[3]);
# die "$cmd: $user[0]: You are not authorized to run this command.\n"
#     if (! grep(/\b$user[0]\b/, @group));
@owner = getpwuid((stat($0))[4]);
$< = $>;

umask "0002";

#==============================================================================
# Initialize environment variables
#------------------------------------------------------------------------------
$ENV{CVSROOT} = "/autons/CVSROOT";
$ENV{CDPATH} = "";
$ENV{PATH} = "/bin:/usr/bin:/usr/local/bin:";
$| = 1;

#==============================================================================
# Initialize CVS variables
#------------------------------------------------------------------------------
$cvs = "/autons/bin/cvs";

#==============================================================================
# Make doubly sure that the command given is secure
#------------------------------------------------------------------------------
for (@ARGV) {
    s/\n//g; s/\r//g;
    die "$cmd: $1: Insecure command! Bailing out!\n"
        if /([][&\;`'\\"|*?~<>\^(){}\$])/;
}

#==============================================================================
# Execute the cvs command if it is not "mode"
#------------------------------------------------------------------------------
exec $cvs, @ARGV if ($ARGV[0] ne "mode");

#==============================================================================
# Else if the cvs command is "mode" we need to support it. Rest of the script
# to take care of that. First make sure that we have exactly 2 arguments
#------------------------------------------------------------------------------
die "$cmd: Too many arguments\n" if ($#ARGV > 1);
die "$cmd: Too less arguments\n" if ($#ARGV < 1);

#==============================================================================
# Start the script for "mode" here
#------------------------------------------------------------------------------
$ENV{AUTOTEST} = "/vws/ddv/ios-np-reg/ats";
$mode = $ARGV[1];

if ($mode =~ /^on$/i) { 
    $mode = 1;
} elsif ($mode =~ /^off$/i) { 
    $mode = 0;
} elsif ($mode =~ /^help$/i) { 
    die "Usage: $cmd mode <on | off | help>\n";
} else {
    die "$cmd: $mode: Invalid mode\nUsage: $cmd mode <on | off | help>\n";
}

#==============================================================================
# Ensure the AUTOTEST environment variable is set
#------------------------------------------------------------------------------
die "$cmd: AUTOTEST environment variable needs to be defined\n"
    unless $ENV{AUTOTEST};

#==============================================================================
# Build the file and directory list excluding "local"
#------------------------------------------------------------------------------
opendir(DIR, $ENV{AUTOTEST}) || die "$cmd: $ENV{AUTOTEST}: $!\n";
@files = grep {!/^local$/ } readdir(DIR);
@files = grep (!/^\.\.?$/, @files);
for (@files) { s:^:$ENV{AUTOTEST}/: };
closedir(DIR);

#==============================================================================
# Change modes appropriately
#------------------------------------------------------------------------------
print $mode?"\nApplying":"\nRemoving", " write permissions recursively for\n\n";
print "User:      $owner[0]\n";
print "Group:     $group[0]\n";
print "Directory: $ENV{AUTOTEST}\n\n";
if ($mode == 1) {
    system "chmod", "-R", "ug+w", @files;
} else {
    system "chmod", "-R", "ug-w", @files;
}

exit 0;
