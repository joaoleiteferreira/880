#!/usr/local/bin/perl5

($prog = $0) =~ s:.*/::;
die "$prog: AUTOTEST environment variable undefined\n" unless $ENV{AUTOTEST};

$dir = "$ENV{AUTOTEST}/local/var";
die "$cmd: $dir: No such directory\n" unless (-d $dir);
die "$cmd: $dir: Directory not readable\n" unless (-r $dir);
die "$cmd: $dir: Cannot change to directory\n" unless (-x $dir);
 
if (! @ARGV) {
    opendir(DIR, $dir) || die "$prog: $dir: $!";
    @ARGV = grep { /^.*\.ckp$/ && -f "$dir/$_" } readdir(DIR);
    closedir DIR;
}

for (@ARGV) {
    s/^/$dir\//;
}
	        
die "\n" unless @ARGV;
for (@ARGV) {
    $fl=$_; $fl=~s:.*/::; $fl=~s/\.ckp//; $fl=~s/\~.*//; $fl=~s/^[^.]*\.//;
    open (CKP, "$_") || die "open: $_: $!\n";
    while (<CKP>) {
	if (/^Testbed:\s+(.+)\s*$/) {
	    $tb = $1; next;
	} elsif (/^Current Test:\s+([0-9]+)\s*$/) {
	    $cr = $1; next;
	} elsif (/^Total Tests:\s+([0-9]+)\s*$/) {
	    $tt = $1; next;
	} elsif (/^Passes:\s+([0-9]+)\s*$/) {
	    $pt = $1; next;
	} elsif (/^Fails:\s+([0-9]+)\s*$/) {
	    $ft = $1; next;
	} elsif (/^Aborts:\s+([0-9]+)\s*$/) {
	    $at = $1; next;
	} elsif (/^Status:\s+(.+)\s*$/) {
	    $st = $1; next;
	}
    }
    write;
    close(CKP);
}
print "=" x 79, "\n";

format STDOUT_TOP =

===============================================================================
  TEST                                          TESTBD   CUR   PPP FFF AAA TTT
.

format STDOUT =
-------------------------------------------------------------------------------
@<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<    @<<<<<  @>>>  @>>>@>>>@>>>@>>>
$fl,                                       $tb,      $cr,   $pt, $ft, $at, $tt
@>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
$st
.
